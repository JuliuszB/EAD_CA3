@page "/NewsArticles"
@inject HttpClient Http
@using System.Runtime.Serialization;
@using System.Net;
<h1>Blazor App CA 3</h1>

<h3 style="text-align:center">News Articles - Top Headlines</h3>

@if (data == null)
{
    <p> Loading..</p>
}
else
{
    @if (found)
    {
        //News article goes here
        @for (int i = 0; i <data.articles.Count; i++)
        {    
<div class="container">
    <div class="row">
        <article>
            <a href="@data.articles.ElementAt(i).url" style="text-decoration:none">
                <img src="@data.articles.ElementAt(i).urlToImage" alt="Article Pic" height="320" width="320" style="float:left; padding:1em"> </a>
                <a href="@data.articles.ElementAt(i).url" style="text-decoration:none"> <h3>@data.articles.ElementAt(i).title</h3> </a>
                <p style="font-size:130%;font-style:italic">@data.articles.ElementAt(i).description</p>
                <p style="font-size:125%">@data.articles.ElementAt(i).content</p>
                <h4>By : @data.articles.ElementAt(i).author</h4>
                <h4>Published @data.articles.ElementAt(i).publishedAt</h4>
</article>
    </div>
    <hr class="solid">
</div>
        }
    }
    else
    {
        @errorMsg
    }
}


@code {

    //Vars
    private Application data;
    private string country = "ie";
    private bool found;
    private string errorMsg;

    //Lifecycle method
    private async Task getNewsArticlesAsync()
    {
        //Try catch block to handle exceptions
        try
        {
            //News API found at https://github.com/public-apis/public-apis#news --> https://newsapi.org/
            string url = "https://newsapi.org/v2/top-headlines?country=" + country + "&apiKey=6901d317102e4ebba09bb241fdb3c16b";
            data = await Http.GetFromJsonAsync<Application>(url);
            found = true;
            errorMsg = string.Empty;
        }
        catch (Exception e)
        {
            found = false;
            Console.WriteLine(e.Message);
            errorMsg = e.Message;
        }
    }

    //Lifecycle method
    protected override async Task OnInitializedAsync()
    {
        await getNewsArticlesAsync();
    }

    //c# Code auto generated from JSON using  https://www.site24x7.com/tools/json-to-csharp.html

    public class Source
    {
        public string id { get; set; }
        public string name { get; set; }

    }
    public class Articles
    {
        public Source source { get; set; }
        public string author { get; set; }
        public string title { get; set; }
        public string description { get; set; }
        public string url { get; set; }
        public string urlToImage { get; set; }
        public DateTime publishedAt { get; set; }
        public string content { get; set; }

    }
    public class Application
    {
        public string status { get; set; }
        public int totalResults { get; set; }
        public IList<Articles> articles { get; set; }

    }
}