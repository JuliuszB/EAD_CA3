@page "/NewsArticles"
@inject HttpClient Http
@inject NavigationManager uriHelper;
@using System.Runtime.Serialization;
@using System.Net;


<h3 style="text-align:center">News articles from @newsFromCountry @newsType</h3>

<!-- If the data doens't load immediately, it will show the P tag-->
@if (data == null)
{
    <p> Loading..</p>
}
else

{
    @if (found)
    {


        //This dropdown lets the user select from news articles by English speaking countries
        <div class="dropdown">
            <button class="dropbtn">Select by country</button>
            <div class="dropdown-content">
                <a @onclick="@(() => changeCountryAll("us", "United States"))">United States</a>
                <a @onclick="@(() => changeCountryAll("ie", "Ireland"))">Ireland</a>
                <a @onclick="@(() => changeCountryAll("gb", "United Kingdom"))">United Kingdom</a>
                <a @onclick="@(() => changeCountryAll("au", "Australia"))">Australia</a>
                <a @onclick="@(() => changeCountryAll("ca", "Canada"))">Canada</a>
                <a @onclick="@(() => changeCountryAll("nz", "New Zealand"))">New Zealand</a>
            </div>
        </div>
        <!-- This dropdown lets the user select which category of news they want to receive.
            It also sends the corresponding string to display in the page for each category-->
        <div class="dropdown">
            <button class="dropbtn">Select by category</button>
            <div class="dropdown-content">
                <a @onclick="@(() => changeCategory("category=general&", " - Top Headlines"))">Top Headlines</a>
                <a @onclick="@(() => changeCategory("category=business&", " - Business"))">Business</a>
                <a @onclick="@(() => changeCategory("category=sport&", " - Sport"))">Sport</a>
                <a @onclick="@(() => changeCategory("category=entertainment&", " - Entertainment"))">Entertainment</a>
                <a @onclick="@(() => changeCategory("category=health&", " - Health"))">Health</a>
                <a @onclick="@(() => changeCategory("category=science&", " - Science"))">Science</a>
                <a @onclick="@(() => changeCategory("category=technology&", " - Technology"))">Technology</a>
            </div>
        </div>



        //News article inside a for loop, loops through each article and prints out to the screen
        @for (int i = 0; i < data.articles.Count; i++)
        {
            <div class="container">
                <div class="row">
                    <article>
                        <!--This column holds the picture with a url link to the article -->
                        <!--<div class="column">-->
                        <a href="@data.articles.ElementAt(i).url" style="text-decoration:none">
                            <img class="piclink" src="@data.articles.ElementAt(i).urlToImage" alt="Picture missing" height="320" width="320" style="float:left; padding:1em;margin:1.5em">
                        </a>
                        <!--</div>-->
                        <!--This column holds the article itself. Title, description, the page content, author and publish date-->
                        <!--<div class="column">-->
                        <a href="@data.articles.ElementAt(i).url" style="text-decoration:none"> <h3 class="headline">@data.articles.ElementAt(i).title</h3> </a>

                        <p style="font-size:130%;font-style:italic">@data.articles.ElementAt(i).description</p>
                        <p style="font-size:125%">@data.articles.ElementAt(i).content</p>
                        <p>By : @data.articles.ElementAt(i).author</p>
                        <p>Published @data.articles.ElementAt(i).publishedAt</p>
                        <!--</div>-->
                    </article>
                </div>
                <hr class="solid">
            </div>
        }
    }
    else
    {
        @errorMsg
    }

    <!-- CSS -->
    <style>
        /*CSS for dropdown buttons gotten from https://www.w3schools.com/howto/howto_css_dropdown.asp */
        /* Dropdown Button */
        .dropbtn {
            background-color: #5cb6e0;
            color: white;
            padding: 16px;
            font-size: 16px;
            border: none;
        }

        /* The container div - needed to position the dropdown content */
        .dropdown {
            position: relative;
            display: inline-block;
        }

        /* Dropdown Content (Hidden by Default) */
        .dropdown-content {
            display: none;
            position: absolute;
            background-color: #f1f1f1;
            min-width: 160px;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            z-index: 1;
        }

            /* Links inside the dropdown */
            .dropdown-content a {
                color: black;
                padding: 12px 16px;
                text-decoration: none;
                display: block;
            }

                /* Change color of dropdown links on hover */
                .dropdown-content a:hover {
                    background-color: #ddd;
                }

        /* Show the dropdown menu on hover */
        .dropdown:hover .dropdown-content {
            display: block;
        }

        /* Change the background color of the dropdown button when the dropdown content is shown */
        .dropdown:hover .dropbtn {
            background-color: #4d9bbf;
        }
        /*This is some CSS styling I wrote for the images of articles*/
        .piclink {
            border-radius: 15px;
            padding: 0.5em;
            box-shadow: 5em;
        }
            .piclink:hover {
                box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
                padding: 0.5em;
            }
        /*This pops the headline out when hovering*/
        .headline:hover {
            font-size: 180%;
            text-shadow: 2px 2px 4px #808080;
        }
    </style>
}

<!-- Variables and methods code-->
@code {

    //Variables
    private Application data;
    private string country = "ie";
    private string category = "";
    private bool found;
    private string errorMsg;
    private string newsType = " - Top Headlines";
    private string newsFromCountry = "Ireland";

    //Lifecycle method
    private async Task getNewsArticlesAsync()
    {
        //Try catch block to handle exceptions
        try
        {
            //News API found at https://github.com/public-apis/public-apis#news -> https://newsapi.org/
            string url = "https://newsapi.org/v2/top-headlines?country=" + country + "&" + category + "apiKey=6901d317102e4ebba09bb241fdb3c16b";
            data = await Http.GetFromJsonAsync<Application>(url);
            found = true;
            errorMsg = string.Empty;
        }
        catch (Exception e)
        {
            found = false;
            Console.WriteLine(e.Message);
            errorMsg = e.Message;
        }
    }

    //Lifecycle method
    protected override async Task OnInitializedAsync()
    {
        await getNewsArticlesAsync();
    }

    //c# Code auto generated from JSON using  https://www.site24x7.com/tools/json-to-csharp.html

    public class Source
    {
        public string id { get; set; }
        public string name { get; set; }

    }
    public class Articles
    {
        public Source source { get; set; }
        public string author { get; set; }
        public string title { get; set; }
        public string description { get; set; }
        public string url { get; set; }
        public string urlToImage { get; set; }
        public DateTime publishedAt { get; set; }
        public string content { get; set; }

    }
    public class Application
    {
        public string status { get; set; }
        public int totalResults { get; set; }
        public IList<Articles> articles { get; set; }

    }

    /* Two methods for selecting by country and by category.
    changeCountryAll() takes in the country from which articles will be shown
    and the country display name for the top of the page*/
    public async void changeCountryAll(string countryIN, string newsFromCountryIN)
    {
        newsFromCountry = newsFromCountryIN;
        country = countryIN;
        await getNewsArticlesAsync();
        StateHasChanged();
    }
    /*
    changeCategory() takes in the category type of news, and the category display name*/
    public async void changeCategory(string categoryIN, string newsTypeIN)
    {
        category = categoryIN;
        newsType = newsTypeIN;
        await getNewsArticlesAsync();
        StateHasChanged();
    }
}